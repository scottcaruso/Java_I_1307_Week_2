/* Scott Caruso - Java 1307 - Week 2 Assignment
 * 
 * 7/18/2013
 */
package com.scottcaruso.userinterface;

import org.json.JSONArray;
import org.json.JSONException;

import com.scottcaruso.statcalculation.Averages;
import com.scottcaruso.uielementgenerator.UIElementCreator;
import com.scottcaruso.utilities.JSONManagement;
import com.scottcaruso.utilities.RetrieveData;

import android.content.Context;
import android.widget.GridLayout;
import android.widget.TextView;


/*This class is exclusively for creating the display that shows the statistics at the bottom of the screen when the user clicks the
 *appropriate button.
 */
public class CreateDisplay extends GridLayout {
	
	Context context;
	int totalAtBats;
	int totalHits;
	int totalDoubles;
	int totalTriples;
	int totalHomers;
	
	public CreateDisplay(Context thisContext)
	{
		super(thisContext);
		String thisPersonsData = MainActivity.getResultText();
		JSONArray listOfGames = JSONManagement.getListOfGames(thisPersonsData);
		int numberOfGames = listOfGames.length()+1;
		
		context = thisContext;
		this.setColumnCount(numberOfGames);
		this.setRowCount(8);
		
		TextView dateLabel = new TextView(context);
		dateLabel.setText("Date");
		TextView opponentLabel = new TextView(context);
		opponentLabel.setText("Opponent");		
		TextView atbatLabel = new TextView(context);
		atbatLabel.setText("AB");		
		TextView hitsLabel = new TextView(context);
		hitsLabel.setText("H");		
		TextView doublesLabel = new TextView(context);
		doublesLabel.setText("2B");		
		TextView triplesLabel = new TextView(context);
		triplesLabel.setText("3B");		
		TextView homerunsLabel = new TextView(context);
		homerunsLabel.setText("HR");		
		TextView rbiLabel = new TextView(context);
		rbiLabel.setText("RBI");
		
		this.addView(dateLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisDate = listOfGames.getJSONObject(x).getString("Date");
				thisTextView.setText(thisDate);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		this.addView(opponentLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisOpponent = listOfGames.getJSONObject(x).getString("Opponent Name");
				thisTextView.setText(thisOpponent);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		this.addView(atbatLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisABs = listOfGames.getJSONObject(x).getString("AB");
				thisTextView.setText(thisABs);
				int oldABs = totalAtBats;
				totalAtBats = oldABs + Integer.parseInt(thisABs);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		this.addView(hitsLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisHits = listOfGames.getJSONObject(x).getString("H");
				thisTextView.setText(thisHits);
				int oldHits = totalHits;
				totalHits = oldHits + Integer.parseInt(thisHits);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		this.addView(doublesLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisDoubles = listOfGames.getJSONObject(x).getString("2B");
				thisTextView.setText(thisDoubles);
				int oldDoubles = totalDoubles;
				totalDoubles = oldDoubles + Integer.parseInt(thisDoubles);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		this.addView(triplesLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisTriples = listOfGames.getJSONObject(x).getString("3B");
				thisTextView.setText(thisTriples);
				int oldTriples = totalTriples;
				totalTriples = oldTriples + Integer.parseInt(thisTriples);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		this.addView(homerunsLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisHomeruns = listOfGames.getJSONObject(x).getString("HR");
				thisTextView.setText(thisHomeruns);
				int oldHomers = totalHomers;
				totalHomers = oldHomers + Integer.parseInt(thisHomeruns);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		this.addView(rbiLabel);
		for (int x = 0; x < numberOfGames; x++)
		{
			try {
				TextView thisTextView = new TextView(context);
				String thisRBI = listOfGames.getJSONObject(x).getString("RBI");
				thisTextView.setText(thisRBI);
				this.addView(thisTextView);
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		float battingAverage = Averages.battingAverage(totalAtBats, totalHits);
		float sluggingPercent = Averages.sluggingPercentage(totalAtBats, totalHits, totalDoubles, totalTriples, totalHomers);
		TextView averageLabel = UIElementCreator.createLabel(MainActivity.getCurrentContext(), "Batting Average: " + String.valueOf(battingAverage));
		TextView sluggingLabel = UIElementCreator.createLabel(MainActivity.getCurrentContext(), "Slugging Percentage: " + String.valueOf(sluggingPercent));
	}		
}
